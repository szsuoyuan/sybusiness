<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sy.modules.dao.sys.UserDao">
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> -->
	<!-- 封装用户结果集 -->
	<resultMap type="SysUser" id="resultListUser">
		<id property="id" column="user_id" />
		<result property="parentid" column="parent_id" />
		<result property="username" column="user_name" />
		<result property="userpass" column="user_pass" />
		<result property="userstatus" column="user_status" />
		<result property="roleId" 	column="role_id" />
		<result property="userremark" column="user_remark" />
		<result property="createName" column="create_name" />
		<result property="createTime" column="create_time" />
		<result property="updateName" column="update_name" />
		<result property="updateTime" column="update_time" />
		<result property="alipayKey" column="alipay_key" />
		<result property="alipayId" column="alipay_id" />
		<result property="alipayAccount" column="alipay_account" />
		<result property="delStatus" column="del_status" />
		<result property="eStatus" column="e_status" />
		<association property="key"	resultMap="com.sy.modules.dao.agt.KeywordDao.keyResult"></association>
		<association property="company"	javaType="com.sy.modules.entity.sys.CompanyInfo" resultMap="com.sy.modules.dao.sys.CompanyInfoDao.comResult">
			<id column="company_id" property="id" />
			<result column="company_name" property="companyname" />
		</association>
		<association property="emp"	javaType="com.sy.modules.entity.sys.SysEmployee" resultMap="com.sy.modules.dao.sys.SysEmployeeMapper.BaseResultMap">
			<id column="e_id" property="eId" jdbcType="INTEGER" />
    		<result column="sys_user_id" property="sysUserId" jdbcType="INTEGER" />
    		<result column="e_number" property="eNumber" jdbcType="VARCHAR" />
    		<result column="e_name" property="eName" jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<select id="queryById" resultMap="resultListUser" parameterType="Long">
		select 
			sc.company_id as id,
			sc.company_name,
			sc.company_person,
			sc.company_phone,
			sc.company_fax,
			sc.company_address,
			sc.company_qq,
			sc.company_email,
			sc.company_site,
			sc.company_business,
			sc.company_descibe,
			sc.del_stuts,
			sc.create_name,
			sc.create_time,
			k.kw_name,
			ar.role_name
		from sys_company sc
		left join sys_user_company suc on
		suc.company_id=sc.company_id
		left join 	sys_user su on su.user_id =	suc.user_id
		left join 	rel_user_keyword ruk on ruk.sys_user_id = suc.user_id
		left join 	ag_keyword k on k.kw_id=ruk.keyword_id
		left join 	rel_approle_user rau on rau.user_id =su.user_id
		left join 	app_role ar on ar.id = rau.role_id
		where su.user_id=#{id}
	</select>
	
	<select id="findAllUserByPage" parameterType="map" resultMap="resultListUser"
		useCache="false" flushCache="true">
		select
			su.*,se.*
		FROM
		sys_user as su LEFT JOIN sys_employee as se ON se.sys_user_id = su.user_id
		where 1=1 and su.del_status=1 and  su.user_id != su.parent_id
		<if test="userName!=null">
			and su.user_name like   CONCAT('%','${userName}','%')
		</if>
		<if test="parentId!=null">
			and su.parent_id =#{parentId}
		</if>
		<if test="eStatus!=null">
			and su.e_status =#{eStatus}
		</if>
		order by su.user_id asc
		<if test="lowerLimit!=null and upperLimit != null">
			limit #{lowerLimit},#{upperLimit}
		</if>
	</select>
	
	
	
	<select id="findAllUserByPageWithLookUp" parameterType="map" resultType="SysUser"
		useCache="false" flushCache="true">
		select
			su.user_id as id,
			su.user_name as username,
			su.user_pass as userpass,
			su.role_id as roleId,
			su.parent_id as parentid,
			su.user_status as userstatus,
			su.user_remark as userremark,
			su.create_name as createName,
			su.create_time as createTime,
			su.update_name as updateName,
			su.update_time as updateTime,
			su.del_status as delStatus
		FROM
		sys_user as su
		where 1=1 and su.user_status =1 and su.del_status=1
		<if test="userName!=null">
			and su.user_name like   CONCAT('%','${userName}','%')
		</if>
		<if test="parentId!=null">
			and su.parent_id =#{parentId}
		</if>
		<if test="eStatus!=null">
			and su.e_status =#{eStatus}
		</if>
		<if test="lowerLimit!=null and upperLimit != null">
			limit #{lowerLimit},#{upperLimit}
		</if>
	</select>

<select id="findById" parameterType="long" resultType="SysUser">
		select
		su.user_id as  id,
		su.role_id as roleId,
		su.parent_id as parentid,
		su.user_name as		username,
		su.user_pass as		userpass,
		su.user_status as 	userstatus,
		su.user_remark as 	userremark,
		su.create_name as 	createName,
		su.create_time as 	createTime,
		su.update_name as 	updateName,
		su.update_time as 	updateTime,
		su.alipay_key as 	alipayKey,
		su.alipay_id as 	alipayId,
		su.alipay_account as alipayAccount,
		su.del_status as delStatus
		from
		sys_user as su
		where 1=1 and su.user_id=#{id}
	</select>
	<select id="findUserByName" parameterType="String" resultMap="resultListUser">
		select
			su.*
		from sys_user as su 
		where su.user_name=#{username} and su.user_status=1 and su.del_status =1
	</select>
	
	<select id="findCountByParam" parameterType="map" resultType="long">
		select count(*) from sys_user where 1=1  and del_status=1 and  user_id != parent_id
		<if test="userName!=null">
			and user_name like CONCAT('%','${userName}','%')
		</if>
		<if test="roleId!=null">
			and role_id = #{roleId}
		</if>
		<if test="parentId!=null">
			and parent_id =#{parentId}
		</if>
		<if test="eStatus!=null">
			and e_status =#{eStatus}
		</if>
	</select>
	
	
	<select id="findCountByParamWithLookUp" parameterType="map" resultType="long">
		select count(*) from sys_user where 1=1 and user_status=1  and del_status=1
		<if test="userName!=null">
			and user_name like CONCAT('%','${userName}','%')
		</if>
		<if test="roleId!=null">
			and role_id = #{roleId}
		</if>
		<if test="parentId!=null">
			and parent_id =#{parentId}
		</if>
		<if test="eStatus!=null">
			and e_status =#{eStatus}
		</if>
	</select>
	
	<select id="count" resultType="long">
		select count(*) from sys_user where del_status=1
	</select>
	
	<insert id="create" parameterType="SysUser" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="username != null">
				user_name,
			</if>
			<if test="userpass != null">
				user_pass,
			</if>
			<if test="userremark != null">
				user_remark,
			</if>
			<if test="userstatus != null">
				user_status,
			</if>
			<if test="parentid != null">
				parent_id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="delStatus != null">
				del_status,
			</if>
			<if test="eStatus != null">
				e_status,
			</if>
		</trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="username != null">
				#{username},
			</if>
			<if test="userpass != null">
				#{userpass},
			</if>
			<if test="userremark != null">
				#{userremark},
			</if>
			<if test="userstatus != null">
				#{userstatus},
			</if>
			<if test="parentid != null">
				#{parentid},
			</if>
			<if test="roleId != null">
				#{roleId},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="delStatus != null">
				#{delStatus},
			</if>
			<if test="eStatus != null">
				#{eStatus},
			</if>
		</trim>
	</insert>
	
	<insert id="createUserCom" parameterType="SysUserCompany">
		insert into
		sys_user_company(user_id,company_id,create_name,create_time)
		values(#{userId},#{companyId},#{createName},#{createTime})
	</insert>

	<update id="update" parameterType="SysUser">
		update sys_user set
			<if test="username!=null and username!=''">user_name=#{username},</if>
			<if test="userpass!=null and userpass!=''">user_pass=#{userpass},</if>
			<if test="userstatus!=null" >user_status=#{userstatus},</if>
			<if test="userremark!=null and userremark!='' ">user_remark=#{userremark},</if>
			<if test="roleId!=null and roleId!=''">role_id=#{roleId}</if>
		where user_id=#{id}
	</update>

	<update id="updateUserById" parameterType="java.lang.Long">
		update sys_user set	del_status=0
		where user_id=#{uid}
	</update>
	
	<delete id="deleteById" parameterType="long">
		delete from sys_user
		where
		user_id=#{id}
	</delete>
	
	<update id="updateUserWithUse" parameterType="java.lang.Long">
		update sys_user set
			e_status =1
		where user_id=#{uid}
	</update>
	
</mapper>